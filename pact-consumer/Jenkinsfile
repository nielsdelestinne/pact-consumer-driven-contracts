pipeline {
    agent any

    environment {
        RELEASE_VERSION = "${sh(returnStdout: true, script: "git rev-list HEAD --count").trim()}"
        PACT_TAG_NAME = getPactTag()
        CONSUMER_VERSION = "${RELEASE_VERSION}-${TAG_NAME}"
    }

    stages {
        stage('Build') {
            steps {
                withMaven(maven: 'mvn') {
                    dir('pact-consumer') {
                        sh 'mvn clean install -DskipTests'
                    }
                }
            }
        }
        stage('Test') {
            steps {
                withMaven(maven: 'mvn') {
                    dir('pact-consumer') {
                        sh 'mvn test'
                    }
                }
            }
        }
        stage('Publish Pact') {
            steps {
                script {
                    if(isValidPactTag()) {
                        withMaven(maven: 'mvn') {
                            dir('pact-consumer') {
                                sh "mvn pact:publish -Dpact-broker.url=http://broker_app:9292 -Dconsumer-application.version=${CONSUMER_VERSION} -Dpact.tag=${TAG_NAME}"
                            }
                        }
                    } else {
                        echo "BRANCH DID NOT CONTAIN THE 'PACT_TAG_' SUFFIX. THUS, NO CONTRACT PUBLISHED."
                    }
                }
            }
        }
        stage('Can I Deploy?') {
            steps {
                withMaven(maven: 'mvn') {
                    dir('pact-consumer') {
                        sh "mvn pact:can-i-deploy -Dpact-broker.url=http://broker_app:9292 -Dpacticipant='UserConsumer' -Dlatest=true"
                    }
                }
            }
        }

    }
}

def pactTagSuffix = 'PACT_TAG_'
def invalidPactTagSuffix = 'INVALID'

def getPactTag() {
    if(env.GIT_BRANCH.contains(pactTagSuffix) {
        return env.GIT_BRANCH.replaceAll(/^.*(${pactTagSuffix}.*$)/, '$1')
    }
    return invalidPactTagSuffix
}

def isValidPactTag() {
    return !PACT_TAG_NAME.equals(invalidPactTagSuffix)
}